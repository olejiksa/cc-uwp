<Page
    x:Class="CC.View.ListEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:CC.Common"
    xmlns:viewModel="using:CC.ViewModel"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:CC.Converters"
    xmlns:acrylic="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    Name="page">

    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate x:DataType="viewModel:ListWordViewModel" x:Key="ListEditorItemTemplate">
            <UserControl>
                <Grid Height="48">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="WindowStates">
                            <VisualState x:Name="NarrowState">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="0"/>
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="id.(Grid.RowSpan)" Value="2"/>
                                    <Setter Target="question.(Grid.ColumnSpan)" Value="2"/>
                                    <Setter Target="answer.(Grid.Column)" Value="1"/>
                                    <Setter Target="answer.(Grid.Row)" Value="1"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="MiddleState">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="640"/>
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="id.(Grid.RowSpan)" Value="2"/>
                                    <Setter Target="question.(Grid.RowSpan)" Value="2"/>
                                    <Setter Target="answer.(Grid.RowSpan)" Value="2"/>
                                    <Setter Target="answer.(Grid.Column)" Value="2"/>
                                    <Setter Target="question.VerticalAlignment" Value="Center"/>
                                    <Setter Target="answer.VerticalAlignment" Value="Center"/>
                                    <Setter Target="question.Margin" Value="0,0,20,0"/>
                                    <Setter Target="answer.Margin" Value="0,0,0,0"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Uid="DeleteItem" Command="{Binding ViewModel.DeleteCommand, ElementName=page}"
                                            CommandParameter="{x:Bind ID, Mode=OneWay}"/>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>

                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Holding">
                            <common:OpenMenuFlyoutAction/>
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="RightTapped">
                            <common:OpenMenuFlyoutAction/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{x:Bind ID, Mode=OneWay}" Name="id"
                           Style="{ThemeResource TitleTextBlockStyle}"
                           VerticalAlignment="Center" Grid.RowSpan="2"
                           Margin="-24,0,0,2.5"
                           TextAlignment="Center"/>

                    <TextBlock Text="{x:Bind Question, Mode=OneWay}" Name="question" Style="{ThemeResource BaseTextBlockStyle}"
                           TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Column="1"
                           Margin="0,3,20,0"/>

                    <TextBlock Text="{x:Bind Answer, Mode=OneWay}" Name="answer" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Margin="0,0,0,3"/>
                </Grid>
            </UserControl>
        </DataTemplate>
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          KeyDown="{x:Bind ViewModel.OnPageKeyDown}"
          KeyUp="{x:Bind ViewModel.OnPageKeyUp}"
          SizeChanged="{x:Bind ViewModel.VMSizeChanged}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="360"/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Name="titleGrid" VerticalAlignment="Top" Style="{ThemeResource HeaderGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Name="titleBlock"
                       Style="{ThemeResource AppTitleTextBlockStyle}"
                       x:Uid="ListEditorTitle"/>
            <TextBlock Text="{x:Bind ViewModel.FileName, Mode=OneWay}" Grid.Column="1" VerticalAlignment="Center"
                       Margin="24,-3,0,0"
                       Name="fileName"
                       Style="{ThemeResource BaseTextBlockStyle}"
                       TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Visibility="Collapsed"/>
        </Grid>

        <CommandBar Name="commandBar">
            <AppBarButton x:Uid="Add"
                          Icon="Add"
                          Name="add"
                          Click="{x:Bind ViewModel.AddNavigateButtonClick}" />
            <AppBarButton x:Uid="New"
                          Click="{x:Bind ViewModel.NewButtonClick}"
                          IsEnabled="{x:Bind ViewModel.IsNewEnabled, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE160;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="Open"
                          Icon="OpenFile"
                          Click="{x:Bind ViewModel.OpenButtonClick}" />
            <AppBarButton x:Uid="Save"
                          Icon="Save"
                          Click="{x:Bind ViewModel.SaveButtonClick}"
                          IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}" />
            <AppBarButton x:Uid="SaveAs"
                          Name="saveAs"
                          Click="{x:Bind ViewModel.SaveAsButtonClick}"
                          IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE28F;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="SaveAs"
                              Name="saveAsItem"
                              Visibility="Collapsed"
                              Click="{x:Bind ViewModel.SaveAsButtonClick}"
                              IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <ScrollViewer Background="{ThemeResource ListEditorPaneThemeBrush}"
                      VerticalScrollBarVisibility="Auto"
                      Grid.Column="1"
                      Grid.Row="1"
                      Name="addEditPanel">
            <Grid>
                <Rectangle Fill="{ThemeResource ListEditorPaneThemeBrush}"
                           Opacity="0.2">
                    <i:Interaction.Behaviors>
                        <acrylic:Blur Value="1"
                                      AutomaticallyStart="True" />
                    </i:Interaction.Behaviors>
                </Rectangle>

                <StackPanel Padding="12,20">
                    <StackPanel.Transitions>
                        <TransitionCollection>
                            <EntranceThemeTransition />
                        </TransitionCollection>
                    </StackPanel.Transitions>

                    <TextBox x:Uid="Question"
                             Margin="0,0,0,12"
                             TextWrapping="Wrap"
                             Text="{Binding ViewModel.CurrentQuestion, ElementName=page, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox x:Uid="Answer"
                             Margin="0,0,0,20"
                             Text="{Binding ViewModel.CurrentAnswer, ElementName=page, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button x:Uid="AddButton"
                            Click="{x:Bind ViewModel.AddButtonClick}"
                            IsEnabled="{x:Bind ViewModel.IsAddEnabled, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.IsAddVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Button x:Uid="EditButton"
                            Click="{x:Bind ViewModel.EditButtonClick}"
                            IsEnabled="{x:Bind ViewModel.IsAddEnabled, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.IsEditVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <ListView Name="words" Grid.Row="1"
                  ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
                  ItemTemplate="{StaticResource ListEditorItemTemplate}"
                  HorizontalAlignment="Stretch"
                  AllowDrop="True"
                  CanDragItems="True"
                  CanReorderItems="True"
                  ReorderMode="Enabled"
                  DragOver="{x:Bind ViewModel.OnDragOver}" 
                  Drop="{x:Bind ViewModel.OnDrop}"
                  DragItemsCompleted="{x:Bind ViewModel.DragItemsCompleted}"
                  SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}"
                  ItemClick="{x:Bind ViewModel.ItemClick}"
                  IsItemClickEnabled="True">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition/>
                    <ContentThemeTransition/>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
        </ListView>

        <Grid Name="emptyPanel" Grid.Row="1"
              AllowDrop="True"
              DragOver="{x:Bind ViewModel.OnDragOver}" 
              Drop="{x:Bind ViewModel.OnDrop}">

            <StackPanel VerticalAlignment="Center">
                <StackPanel.Transitions>
                    <TransitionCollection>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </StackPanel.Transitions>
                
                <TextBlock Text="😢"
                       TextAlignment="Center"
                       IsColorFontEnabled ="False"
                       Style="{ThemeResource HeaderTextBlockStyle}"
                       FontSize="72"/>
                <TextBlock x:Uid="ListEditorNoItemsTitle" TextAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}"/>
                <TextBlock x:Uid="ListEditorNoItems" TextAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!--Поведения-->
        <i:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.State, Mode=OneWay}" Value="Normal">
                <core:GoToStateAction StateName="Normal"/>
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.State, Mode=OneWay}" Value="NoData">
                <core:GoToStateAction StateName="NoData"/>
            </core:DataTriggerBehavior>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <!--Состояния содержимого-->
            <VisualStateGroup x:Name="States">
                <VisualState x:Name="Normal">
                    <VisualState.Setters>
                        <Setter Target="emptyPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="words.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NoData">
                    <VisualState.Setters>
                        <Setter Target="emptyPanel.Visibility" Value="Visible"/>
                        <Setter Target="words.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <!--Состояния окна и (или) экрана-->
            <VisualStateGroup x:Name="windowStates">
                <VisualState x:Name="bigState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1366"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="12,0,0,0"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="1"/>
                        <Setter Target="add.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="12,0,0,0"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="1"/>
                        <Setter Target="add.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="middleState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="12,0,0,0"/>
                        <Setter Target="addEditPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="words.SelectionMode" Value="None"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="littleState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="60,0,0,0"/>
                        <Setter Target="addEditPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="words.SelectionMode" Value="None"/>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="saveAs.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAsItem.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="60,0,0,0"/>
                        <Setter Target="addEditPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="words.SelectionMode" Value="None"/>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="saveAs.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAsItem.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>