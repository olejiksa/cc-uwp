<Page
    x:Class="CC.View.FillingView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CC.Controls"
    xmlns:converters="using:CC.Converters"
    xmlns:helpers="using:CC.Helpers"
    xmlns:model="using:CC.Model"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:acrylic="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:viewModel="using:CC.ViewModel"
    xmlns:common="using:CC.Common"
    Name="page">
    <Page.Resources>
        <converters:BooleanToSolidColorBrushConverter x:Key="BooleanToSolidColorBrushConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter"/>
        <converters:ObjectToCharArrayConverter x:Key="ObjectToCharArrayConverter"/>
        <converters:StringToLengthConverter x:Key="StringToLengthConverter"/>
        <converters:FillingGridWordToObjectConverter x:Key="FillingGridWordToObjectConverter"/>

        <!--Элемент списка-->
        <DataTemplate x:DataType="viewModel:ListWordViewModel" x:Key="WordListItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{x:Bind ID, Mode=OneWay}" Style="{ThemeResource BaseTextBlockStyle}" TextAlignment="Center"
                           Margin="-12,0,0,0"/>
                <TextBlock Text="{x:Bind Question}" TextTrimming="CharacterEllipsis" Grid.Column="1"/>
            </Grid>
        </DataTemplate>

        <!--Элемент сетки-->
        <DataTemplate x:DataType="model:FillingGridWordModel"
                      x:Key="CrosswordGridItemTemplate">
            <StackPanel Orientation="{x:Bind Orientation}"
                        Tapped="PanelTapped">
                <!--Число-идентификатор-->
                <Grid Height="25" Width="25">
                    <TextBlock Text="{x:Bind ID, Mode=OneWay}"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Style="{ThemeResource CellNumberTextBlockStyle}"/>
                </Grid>

                <!--Символы слова-->
                <ItemsControl ItemsSource="{x:Bind Answer, Converter={StaticResource ObjectToCharArrayConverter}, Mode=OneWay}"
                              ItemTemplate="{StaticResource SymbolItemTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="{Binding Orientation}"
                                        Background="{Binding IsSelected, Mode=OneWay, Converter={StaticResource BooleanToSolidColorBrushConverter}}"
                                        BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}"
                                        BorderThickness="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>

        <!--Элемент слова-->
        <DataTemplate x:Key="SymbolItemTemplate" x:DataType="model:SymbolItem">
            <Grid Height="25" Width="25" BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}" BorderThickness="1">
                <TextBlock Text="{x:Bind Symbol, Mode=OneWay}" TextAlignment="Center" VerticalAlignment="Center"
                           Margin="0,-3,0,0" Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          KeyDown="{x:Bind ViewModel.OnPageKeyDown}"
          KeyUp="{x:Bind ViewModel.OnPageKeyUp}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="360"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Canvas x:Name="PrintCanvas" Opacity="0"/>

        <Grid Name="titleGrid" VerticalAlignment="Top" Style="{ThemeResource HeaderGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Name="titleBlock"
                       Style="{ThemeResource AppTitleTextBlockStyle}"
                       Margin="12,0,0,0"
                       x:Uid="FillingTitle"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Center"
                       Margin="24,-3,0,0"
                       Name="fileName"
                       Text="{x:Bind ViewModel.GridFileName, Mode=OneWay}"
                       Style="{ThemeResource BaseTextBlockStyle}"
                       Visibility="Collapsed"
                       TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
        </Grid>

        <!--Панель команд-->
        <CommandBar Grid.Column="1" Name="commandBar">
            <AppBarButton Icon="List" x:Uid="Questions" IsEnabled="{x:Bind ViewModel.IsFileReady, Mode=OneWay}" Name="list"
                          Command="{x:Bind ViewModel.GoToQuestionsViewCommand}"/>
            <AppBarButton x:Uid="Print"
                          Command="{x:Bind ViewModel.PrintCommand}"
                          IsEnabled="{x:Bind ViewModel.IsFileReady, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE2F6;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Icon="OpenFile" x:Uid="Open"
                          Command="{x:Bind ViewModel.OpenCommand}"/>
            <AppBarButton Icon="Accept" x:Uid="Check" IsEnabled="{x:Bind ViewModel.IsCheckEnabled, Mode=OneWay}"
                          Command="{x:Bind ViewModel.CheckCommand}"/>
        </CommandBar>

        <!--Список вопросов-->
        <Grid Background="{ThemeResource ListEditorPaneThemeBrush}"
              Grid.Column="2" Grid.Row="1" Name="questionsPanel"
              Visibility="Collapsed">
            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Grid.ChildrenTransitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Rectangle Fill="{ThemeResource ListEditorPaneThemeBrush}"
                       Opacity="0.2"
                       Grid.RowSpan="3">
                <i:Interaction.Behaviors>
                    <acrylic:Blur Value="1"
                                  AutomaticallyStart="True" />
                </i:Interaction.Behaviors>
            </Rectangle>

            <StackPanel Padding="12,20,12,2" Visibility="{x:Bind ViewModel.HasSelectedItem, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{x:Bind ViewModel.SelectedItem.Question, Mode=OneWay}" Margin="0,0,0,8" TextWrapping="Wrap"/>
                <TextBox MaxLength="{x:Bind ViewModel.SelectedItem.Answer, Mode=OneWay, Converter={StaticResource StringToLengthConverter}}"
                         Name="answerBox" Text="{Binding ViewModel.FilledAnswer, Mode=TwoWay, ElementName=page, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

            <TextBlock x:Uid="QuestionsTitle" Style="{ThemeResource AppTitleTextBlockStyle}" Margin="12,20,0,12" Grid.Row="1"/>

            <TextBlock x:Uid="NoItems" Style="{ThemeResource EmptyTextBlockStyle}" Margin="12,8,0,0" Grid.Row="2"
                       Visibility="{x:Bind ViewModel.HasListItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInvertConverter}}"/>

            <ListView Grid.Row="2"
                      ItemsSource="{x:Bind ViewModel.WordList, Mode=OneWay}"
                      ItemTemplate="{StaticResource WordListItemTemplate}"
                      HorizontalAlignment="Stretch"
                      SelectionMode="Single"
                      Name="listView"
                      IsItemClickEnabled="True"
                      ItemClick="ListItemClick">
                <ListView.ItemContainerTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </ListView.ItemContainerTransitions>
            </ListView>
        </Grid>

        <!--Панель, показываемая при отстутствии элементов-->
        <Grid Name="emptyPanel"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              AllowDrop="True"
              DragOver="{x:Bind ViewModel.OnGridDragOver}" 
              Drop="{x:Bind ViewModel.OnGridDrop}"
              Visibility="{x:Bind ViewModel.HasGridItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInvertConverter}}">
            <StackPanel VerticalAlignment="Center">
                <StackPanel.Transitions>
                    <TransitionCollection>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </StackPanel.Transitions>

                <TextBlock Text="😜"
                       TextAlignment="Center"
                       IsColorFontEnabled ="False"
                       Style="{ThemeResource HeaderTextBlockStyle}"
                       FontSize="72"/>
                <TextBlock x:Uid="GridNoItemsTitle" TextAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}"/>
                <TextBlock x:Uid="FillingNoItems" TextAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!--Сетка-->
        <ScrollViewer Name="crosswordGrid"
                      HorizontalScrollBarVisibility="Auto" 
                      VerticalScrollBarVisibility="Auto"
                      AllowDrop="True"
                      DragOver="{x:Bind ViewModel.OnGridDragOver}" 
                      Drop="{x:Bind ViewModel.OnGridDrop}"
                      Grid.Row="1"
                      Visibility="{x:Bind ViewModel.HasGridItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
                          ItemTemplate="{StaticResource CrosswordGridItemTemplate}"
                          Name="itemsControl" UseLayoutRounding="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Canvas.ChildrenTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition/>
                                </TransitionCollection>
                            </Canvas.ChildrenTransitions>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="helpers:BindingHelper.CanvasLeftBindingPath" Value="X"/>
                        <Setter Property="helpers:BindingHelper.CanvasTopBindingPath" Value="Y"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="windowStates">
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="questionsPanel.Visibility" Value="Visible"/>
                        <Setter Target="list.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="middleState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="0"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="titleGrid.Padding" Value="48,0,0,0"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="lowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="titleGrid.Padding" Value="48,0,0,0"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="commandBar.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="commandBar.(Grid.Row)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>