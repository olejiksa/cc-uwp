<Page
    x:Class="CC.View.GridEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CC.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:CC.Converters"
    xmlns:acrylic="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:helpers="using:CC.Helpers"
    xmlns:model="using:CC.Model"
    xmlns:viewModel="using:CC.ViewModel"
    xmlns:common="using:CC.Common"
    Name="page">
    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter"/>
        <converters:StringToCharArrayConverter x:Key="StringToCharArrayConverter"/>

        <!--Элемент списка-->
        <DataTemplate x:DataType="viewModel:ListWordViewModel" x:Key="WordListItemTemplate">
            <Grid>
                <TextBlock Text="{x:Bind Answer}" ToolTipService.ToolTip="{x:Bind Question}"/>
            </Grid>
        </DataTemplate>

        <!--Элемент сетки-->
        <DataTemplate x:DataType="viewModel:GridWordViewModel"
                      x:Key="CrosswordGridItemTemplate">
            <StackPanel Orientation="{x:Bind Orientation, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind Question, Mode=OneWay}"
                        Tapped="PanelTapped" ManipulationMode="All"
                        ManipulationDelta="PanelManipulationDelta"
                        DoubleTapped="PanelDoubleTapped"
                        Holding="PanelHolding"
                        RightTapped="PanelRightTapped">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="DeleteItem" Command="{Binding ViewModel.DeleteCommand, ElementName=page}"
										CommandParameter="{x:Bind ID, Mode=OneWay}"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>

                <Grid Height="25" Width="25">
                    <TextBlock Text="{x:Bind ID, Mode=OneWay}"
                       TextAlignment="Center" VerticalAlignment="Center"
                       Style="{ThemeResource CellNumberTextBlockStyle}"/>
                </Grid>

                <ItemsControl ItemsSource="{x:Bind Answer, Mode=OneWay, Converter={StaticResource StringToCharArrayConverter}}"
                              ItemTemplate="{StaticResource SymbolItemTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="{Binding Orientation}"
                                        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                        BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}"
                                        BorderThickness="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>

        <!--Элемент слова-->
        <DataTemplate x:DataType="model:SymbolItem"
                      x:Key="SymbolItemTemplate">
            <Grid Height="25" Width="25" BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}" BorderThickness="1">
                <TextBlock Text="{x:Bind Symbol, Mode=OneWay}" TextAlignment="Center" VerticalAlignment="Center"
                           Margin="0,-3,0,0"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          KeyDown="{x:Bind ViewModel.OnPageKeyDown}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="360"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Name="titleGrid" VerticalAlignment="Top" Style="{ThemeResource HeaderGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Name="titleBlock"
                       Style="{ThemeResource AppTitleTextBlockStyle}"
                       x:Uid="GridEditorTitle"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Center"
                       Margin="24,-3,0,0"
                       Name="fileName"
                       Text="{x:Bind ViewModel.GridFileName, Mode=OneWay}"
                       Style="{ThemeResource BaseTextBlockStyle}"
                       TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"
                       Visibility="Collapsed"/>
        </Grid>

        <CommandBar Grid.Column="1" Name="mainCommandBar">
            <AppBarButton Icon="Add" x:Uid="Add"
                          Command="{x:Bind ViewModel.AddCommand}"
                          Visibility="Collapsed"
                          Name="add"/>
            <AppBarButton Command="{x:Bind ViewModel.NewCommand}"
                          x:Uid="New"
                          IsEnabled="{x:Bind ViewModel.IsNewEnabled, Mode=OneWay}" Name="create">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE160;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Icon="OpenFile" x:Uid="OpenGrid"
                          Command="{x:Bind ViewModel.OpenGridCommand}"/>
            <AppBarButton Icon="Save" x:Uid="Save"
                          Command="{x:Bind ViewModel.SaveGridCommand}"
                          IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}"/>
            <AppBarButton x:Uid="SaveAs"
                          Command="{x:Bind ViewModel.SaveAsGridCommand}"
                          IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}"
                          Name="saveAs"
                          Visibility="Collapsed">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE28F;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Command="{x:Bind ViewModel.ShareCommand, Mode=OneWay}" x:Uid="Share"
                          IsEnabled="{x:Bind ViewModel.IsFileReady, Mode=OneWay}"
                          Name="share"
                          Visibility="Collapsed">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE72D;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <CommandBar.SecondaryCommands>
                <AppBarButton Command="{x:Bind ViewModel.NewCommand}"
                          x:Uid="New"
                          IsEnabled="{x:Bind ViewModel.IsNewEnabled, Mode=OneWay}"
                          Name="newItem" Visibility="Collapsed"/>
                <AppBarButton x:Uid="SaveAs"
                          Command="{x:Bind ViewModel.SaveAsGridCommand}"
                          IsEnabled="{x:Bind ViewModel.IsDirty, Mode=OneWay}"
                          Name="saveAsItem"/>
                <AppBarButton Command="{x:Bind ViewModel.ShareCommand, Mode=OneWay}" x:Uid="Share"
                          IsEnabled="{x:Bind ViewModel.IsFileReady, Mode=OneWay}"
                          Name="shareItem"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <CommandBar Name="commandBar">
            <AppBarButton Command="{x:Bind ViewModel.OpenListCommand}" x:Uid="OpenList" Icon="OpenFile"/>
        </CommandBar>

        <Grid Background="{ThemeResource ListEditorPaneThemeBrush}"
              Grid.Column="2" Grid.Row="1" Name="wordsPanel"
              AllowDrop="True"
              DragOver="{x:Bind ViewModel.OnDragOver}" 
              Drop="{x:Bind ViewModel.OnDrop}">
            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Grid.ChildrenTransitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Rectangle Fill="{ThemeResource ListEditorPaneThemeBrush}"
                       Opacity="0.2" Grid.RowSpan="2">
                <i:Interaction.Behaviors>
                    <acrylic:Blur Value="1"
                                  AutomaticallyStart="True" />
                </i:Interaction.Behaviors>
            </Rectangle>

            <TextBlock x:Uid="WordsTitle" Style="{ThemeResource AppTitleTextBlockStyle}" Margin="12,20,0,12"/>

            <TextBlock x:Uid="NoItems" Style="{ThemeResource EmptyTextBlockStyle}" Margin="12,8,0,0" Grid.Row="1"
                       Visibility="{x:Bind ViewModel.HasListItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInvertConverter}}"/>

            <ListView Grid.Row="1"
                      ItemsSource="{x:Bind ViewModel.WordList, Mode=OneWay}"
                      ItemTemplate="{StaticResource WordListItemTemplate}"
                      HorizontalAlignment="Stretch"
                      SelectionMode="None"
                      CanDragItems="True" 
                      DragItemsStarting="{x:Bind ViewModel.OnDragItemsStarting}">
                <ListView.ItemContainerTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </ListView.ItemContainerTransitions>
            </ListView>
        </Grid>

        <Grid Name="emptyPanel" Grid.Row="1"
              AllowDrop="True"
              DragOver="{x:Bind ViewModel.OnGridDragOver}" 
              Drop="{x:Bind ViewModel.OnGridDrop}"
              Visibility="{x:Bind ViewModel.HasGridItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInvertConverter}}">
            <StackPanel VerticalAlignment="Center">
                <StackPanel.Transitions>
                    <TransitionCollection>
                        <EntranceThemeTransition/>
                    </TransitionCollection>
                </StackPanel.Transitions>

                <TextBlock Text="😜"
                       TextAlignment="Center"
                       IsColorFontEnabled ="False"
                       Style="{ThemeResource HeaderTextBlockStyle}"
                       FontSize="72"/>
                <TextBlock x:Uid="GridNoItemsTitle" TextAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}"/>
                <TextBlock x:Uid="GridEditorNoItems" TextAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!--Сетка-->
        <ScrollViewer Name="crosswordGrid"
                      HorizontalScrollBarVisibility="Auto" 
                      VerticalScrollBarVisibility="Auto"
                      AllowDrop="True"
                      DragOver="{x:Bind ViewModel.OnGridDragOver}" 
                      Drop="{x:Bind ViewModel.OnGridDrop}"
                      Grid.Row="1"
                      Visibility="{x:Bind ViewModel.HasGridItems, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
                          ItemTemplate="{StaticResource CrosswordGridItemTemplate}"
                          Name="itemsControl" UseLayoutRounding="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Canvas.ChildrenTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition/>
                                </TransitionCollection>
                            </Canvas.ChildrenTransitions>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="helpers:BindingHelper.CanvasLeftBindingPath" Value="X"/>
                        <Setter Property="helpers:BindingHelper.CanvasTopBindingPath" Value="Y"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>

        <VisualStateManager.VisualStateGroups>
            <!--Состояния окна и (или) экрана-->
            <VisualStateGroup x:Name="windowStates">
                <VisualState x:Name="bigState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1366"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding" Value="12,0,0,0"/>
                        <Setter Target="commandBar.(Grid.Column)" Value="2"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="saveAs.Visibility" Value="Visible"/>
                        <Setter Target="share.Visibility" Value="Visible"/>
                        <Setter Target="saveAsItem.Visibility" Value="Collapsed"/>
                        <Setter Target="shareItem.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titleGrid.Padding"
                                Value="12,0,0,0" />
                        <Setter Target="commandBar.(Grid.Column)"
                                Value="2" />
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)"
                                Value="2" />
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)"
                                Value="2" />
                        <Setter Target="saveAs.Visibility"
                                Value="Visible" />
                        <Setter Target="share.Visibility"
                                Value="Visible" />
                        <Setter Target="saveAsItem.Visibility"
                                Value="Collapsed" />
                        <Setter Target="shareItem.Visibility"
                                Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="middleState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="add.Visibility" Value="Visible"/>
                        <Setter Target="titleGrid.Padding" Value="12,0,0,0"/>
                        <Setter Target="commandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="mainCommandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="mainCommandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="mainCommandBar.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="wordsPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAs.Visibility" Value="Visible"/>
                        <Setter Target="share.Visibility" Value="Visible"/>
                        <Setter Target="saveAsItem.Visibility" Value="Collapsed"/>
                        <Setter Target="shareItem.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="littleState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="add.Visibility" Value="Visible"/>
                        <Setter Target="titleGrid.Padding" Value="60,0,0,0"/>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="commandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="mainCommandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="mainCommandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="mainCommandBar.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="wordsPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAs.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAsItem.Visibility" Value="Visible"/>
                        <Setter Target="newItem.Visibility" Value="Collapsed"/>
                        <Setter Target="create.Visibility" Value="Visible"/>
                        <Setter Target="shareItem.Visibility" Value="Visible"/>
                        <Setter Target="share.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="add.Visibility" Value="Visible"/>
                        <Setter Target="titleGrid.Padding" Value="60,0,0,0"/>
                        <Setter Target="fileName.Visibility" Value="Collapsed"/>
                        <Setter Target="commandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="emptyPanel.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="titleGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="crosswordGrid.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="words.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="mainCommandBar.(Grid.Row)" Value="2"/>
                        <Setter Target="mainCommandBar.(Grid.Column)" Value="0"/>
                        <Setter Target="mainCommandBar.(Grid.ColumnSpan)" Value="3"/>
                        <Setter Target="wordsPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAs.Visibility" Value="Collapsed"/>
                        <Setter Target="saveAsItem.Visibility" Value="Visible"/>
                        <Setter Target="newItem.Visibility" Value="Collapsed"/>
                        <Setter Target="create.Visibility" Value="Visible"/>
                        <Setter Target="shareItem.Visibility" Value="Visible"/>
                        <Setter Target="share.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>